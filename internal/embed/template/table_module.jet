// Code generated by gen_csv_loader. DO NOT EDIT.

package {{.PackageName}}

import (
{{ if .Embed }}
    "embed"
{{ end }}
    "fmt"
    "github.com/emirpasic/gods/trees/redblacktree"
    "os"
    "path/filepath"
)

// 防止编译不通过, 偷懒不想检测是否使用树结构.
var _ = redblacktree.Tree{}

/*
 * CSV 格式
 * 1: 描述
 * 2: 使用范围 A,C,S -> all,client,server
 * 3: 类型 int,string,float
 * 4: 键名
 * 5: 索引
 *
 * tag eg   hash:"group=1"	type:"[]int"	hash:"group=2;unique=0" hash1:"group=3;unique=0"	hash1:"group=3;unique=0" tree:"group=4;unique=0"
 * tag index
 *      hash, tree 必须存在主键(hash unique)
 *      该列有多个hash请使用:  hash1  hash2 ...
 *      index optional  eg:hash:"group=1;unique=1;order=0;auto=0"
 *          group: 分组标识,用于判断字段组合联合索引  必填字段
 *          unique: 1唯一 0不唯一                默认唯一
 *          order:  1有序 0无序                  默认有序
 *          auto:   1自增 0非自增                默认非自增
 *
 *
 * tag type 支持类型: ?代表除interface之外,所有基础类型
 *      map[?]?
 *      []?
 *      ?
 *      FormulaFunc 特殊处理公式,需要提供相应的FormulaFunc定义
 *      interface{} 特殊处理interface{},可以解析任何json结构,注意解析的内容存放在属性.Json中
 *      XXX         可以解析任何String,注意需要自己实现解析接口 func (s *XXX) UnmarshalCSV(val string) error {...}
 *
 * tag external 需要自定义外部导入, 不从csv解析
 * */

// 生成文件请不要编辑

